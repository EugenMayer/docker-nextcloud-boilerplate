version: '3.3'
services:
  app:
    labels:
      traefik.http.routers.nextcloud-app.rule: 'Host(`${DOMAIN}`)'
      traefik.http.routers.nextcloud-app.tls: 'true'
      traefik.http.routers.nextcloud-app.tls.certresolver: 'default'
      traefik.http.routers.nextcloud-app.middlewares: 'nextcloud-dav,nextcloud-security'
      traefik.http.middlewares.nextcloud-security.headers.customFrameOptionsValue: 'SAMEORIGIN'
      traefik.http.middlewares.nextcloud-security.headers.framedeny: 'true'
      traefik.http.middlewares.nextcloud-security.headers.stsIncludeSubdomains: 'true'
      traefik.http.middlewares.nextcloud-security.headers.stsPreload: 'true'
      traefik.http.middlewares.nextcloud-security.headers.stsSeconds: 15552000
      traefik.http.middlewares.nextcloud-dav.replacepathregex.regex: '^/.well-known/ca(l|rd)dav'
      traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement: '/remote.php/dav/'
  traefik:
    image: eugenmayer/traefik:2.x
    restart: always
    ports:
      - 80:8080
      - 443:8443
    environment:
      TRAEFIK_ACME_ENABLE: 'true'
      TRAEFIK_ACME_CHALLENGE: 'http'
      TRAEFIK_HTTPS_ENABLE: 'only'
      TRAEFIK_DOCKER_ENABLE: 'true'
    volumes:
      - certs:/mnt/certs
      - filestorage:/mnt/filestorage
      - acme:/mnt/acme
      # mount our docker socket so our docker container can be discovered
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  certs:
  filestorage:
  acme:
